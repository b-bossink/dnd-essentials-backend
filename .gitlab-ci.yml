workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

stages:
  - code-analysis
  - test
  - build

sonarqube-analysis:
  stage: code-analysis
  image: mcr.microsoft.com/dotnet/core/sdk:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
      - "apt-get update"
      - "apt-get install --yes openjdk-11-jre"
      - "dotnet tool install --global dotnet-sonarscanner"
      - "export PATH=\"$PATH:$HOME/.dotnet/tools\""
      - "dotnet sonarscanner begin /k:\"dnd-essentials-backend\" /d:sonar.login=\"$SONAR_TOKEN\" /d:\"sonar.host.url=$SONAR_HOST_URL\" "
      - "dotnet build"
      - "dotnet sonarscanner end /d:sonar.login=\"$SONAR_TOKEN\""
  allow_failure: true
  only:
    - main

unit_tests:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - dotnet test

build_image:
  stage: build
  image: docker:20.10.18
  services:
    - docker:20.10.18-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: bbossink/dnd-essentials-api
    IMAGE_TAG: 0.0.1-alpha
  before_script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG